[tool.poetry]
name = "notifications"
version = "0.1.0"
description = "Chat bot for WaxLabs notifications"
authors = ["Bruno Souza <bruno@detroitledger.tech>"]
readme = "README.md"
packages = [
    {include = "src/notifications"},
    {include = "src/cli"},
]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = {extras = ["standard"], version = "^0.115.0"}
pydantic-settings = "^2.5.2"
orjson = "^3.9.7"
uvicorn = {extras = ["standard"], version = "^0.31.0"}
httpx = "^0.27.2"
sqlalchemy = {extras = ["postgresql-asyncpg"], version = "^2.0.35"}
lagom = "^2.6.0"
alembic = "^1.13.3"
aioboto3 = "^13.1.1"
aiogram = "^3.13.1"
aiogram-fastapi-server = "^0.1.2"
jinja2 = "^3.1.4"
asyncpg-listen = "^0.0.7"
gunicorn = "^23.0.0"
cyclopts = "^2.9.9"
taskipy = "^1.13.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.8"
taskipy = "^1.12.0"

[tool.ruff]
line-length = 120
target-version = "py312"
src = ["src", "tests"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I"
]

[tool.ruff.lint.isort]
known-first-party = [
    "notifications",
    "cli",
]

[tool.taskipy.tasks]
format = { cmd = "ruff format && task fix", help = "Lint and Format project" }
fix = { cmd = "ruff check --fix --unsafe-fixes", help = "Auto-fix lint errors" }
check = { cmd = "ruff check ./src/", help = "Lint errors" }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
wax_labs = "cli:app"
