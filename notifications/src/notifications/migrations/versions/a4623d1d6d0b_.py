"""empty message

Revision ID: a4623d1d6d0b
Revises: a50a029f627d
Create Date: 2023-10-09 17:33:20.458772

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a4623d1d6d0b"
down_revision: Union[str, None] = "a50a029f627d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

old_enum = postgresql.ENUM(
    "DRAFTING",
    "SUBMITTED_OR_DELIVERABLE_IN_PROGRESS",
    "APPROVED_OR_REPORTED",
    "VOTING_OR_ACCEPTED",
    "REJECTED_OR_PROPOSAL_IN_PROGRESS",
    "FAILED_OR_CLAIMED",
    "CANCELLED",
    "COMPLETED",
    "FAILED_DRAFT",
    name="proposalstatuskey",
)

new_enum = sa.Enum(
    "DRAFTING",
    "SUBMITTED",
    "APPROVED",
    "VOTING",
    "IN_PROGRESS",
    "FAILED",
    "CANCELLED",
    "COMPLETED",
    "FAILED_DRAFT",
    name="proposalstatus",
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    new_enum.create(op.get_bind(), checkfirst=True)
    op.alter_column(
        "proposals",
        "status",
        existing_type=old_enum,
        type_=new_enum,
        existing_nullable=True,
        postgresql_using="null",
    )
    op.alter_column("users", "chat_id", existing_type=sa.INTEGER(), nullable=True)
    old_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    old_enum.create(op.get_bind(), checkfirst=True)
    op.alter_column("users", "chat_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column(
        "proposals",
        "status",
        existing_type=new_enum,
        type_=old_enum,
        existing_nullable=True,
        postgresql_using="null",
    )
    new_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
